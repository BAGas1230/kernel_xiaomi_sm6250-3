
version: 2.1
jobs:
  Kernel_miatoll:
   docker:
      - image: ubuntu:20.04
   steps:
      - run:
          name: Prepare Environment
          no_output_timeout: 20m
          command: 
           export TERM=xterm
           apt-get update -y && ln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime && apt-get install bison build-essential curl flex git gnupg gperf ccache liblz4-tool libncurses5-dev libsdl1.2-dev libxml2 libxml2-utils lzop pngcrush schedtool squashfs-tools xsltproc zip zlib1g-dev build-essential kernel-package libncurses5-dev bzip2 git python wget gcc g++ curl sudo libssl-dev openssl -y
      - run:
          name: Downloading sources
          no_output_timeout: 20m
          command: 
            cd ~
            mkdir clang && git clone https://github.com/kdrag0n/proton-clang --depth=1
            git clone https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git --depth=1 --branch=$CIRCLE_BRANCH kernel
            git clone https://github.com/GeoZac/AnyKernel.git --depth=1 --branch=miatoll AnyKernel
      - run:
          name: Compile
          no_output_timeout: 20m
          command: 
            export KBUILD_BUILD_USER="bagas"
            export ARCH=arm64 ' 
            export SUBARCH=arm64
            PATH=$CLANG_DIR/bin/:/usr/bin:$PATH 
            source $BASH_ENV
            cd ~/kernel
            make clean && make mrproper O=output
             make -j"$PROCS" O=out CROSS_COMPILE=aarch64-linux-gnu- \
             CC=clang CROSS_COMPILE_ARM32=$CLANG_DIR/bin/arm-linux-gnueabi- \
             READELF=llvm-readelf OBJSIZE=llvm-size \
             OBJDUMP=llvm-objdump OBJCOPY=llvm-objcopy STRIP=llvm-strip \
             NM=llvm-nm AS=llvm-as AR=llvm-ar \
             HOSTAR=llvm-ar HOSTAS=llvm-as HOSTNM=llvm-nm \
             LD=ld.lld
      - run:
          name: Send to transfer.sh
          no_output_timeout: 20m
          command: |
            cd ~/AnyKernel
            cp ~/kernel/output/arch/arm64/boot/Image.gz-dtb .
            cp ~/kernel/output/arch/arm64/boot/dtbo.img .
            ZIPNAME="Kernel-$(date +%d_%m_%Y_%H_%M)-miatoll.zip"
            zip -r9 "${ZIPNAME}" ./* -x ".git/*" "README.md" ".gitignore" "*.zip"
            curl --upload-file ./hello.txt https://transfer.sh/hello.txt https://transfer.sh/66nb8/hello.txt/
      - store_artifacts:
          path: ~/kernel/output/.config
          destination: kernel_defconfig

workflows:
  version: 2.1
  cooking:
    jobs:
      - Kernel_miatoll